#include <LiquidCrystal.h>
#include <OneWire.h>                    //DS18B20是单总线器件
#include <DallasTemperature.h>      //DS18B20专用类库
#define ONE_WIRE_BUS 10           //DS18B20数据端连接到I/O口2
#define buzzer 9      //蜂鸣器连接 
OneWire oneWire(ONE_WIRE_BUS);    //定义一个单总线器件实例
DallasTemperature sensors(&oneWire);//定义一个DS18B20实例
//蜂鸣器9号 温度 10号 


// 实例化一个名为lcd的LiquidCrysta类型对象，并初始化相关引脚
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

int DHpin = 8;    
byte dat[5];
byte read_data() {
  byte data=0;
  for (int i = 0; i < 8; i++) {
      if (digitalRead(DHpin) == LOW) {
          while (digitalRead(DHpin) == LOW);    //等待50us
           delayMicroseconds(30);                      //判定数据是‘0’还是‘1’
           if (digitalRead(DHpin) == HIGH)
              data |= (1 << (7 - i));                           //高位在前，低位在后
           while (digitalRead(DHpin) == HIGH);   //数据‘1’，等待下一位
       }
  }
  return data;
}
void start_test()
{  digitalWrite(DHpin, LOW);             //拉低总线，发送开始信号
  delay(30);                                          //延时>18ms
  digitalWrite(DHpin, HIGH);    //发送高电平
  delayMicroseconds(40);    //延时40us，等待响应
  pinMode(DHpin, INPUT);    //数字I/O口改变为输入
  while (digitalRead(DHpin) == HIGH); //等待读得输入高电平
  delayMicroseconds(80);                      //拉低总线80us；
  if (digitalRead(DHpin) == LOW); //如果数字I/O口输入低电平
  delayMicroseconds(80);                      //延时80us，开始接收数据
  for (int i = 0; i < 4; i++)                         //接收5字节温湿度数据
    dat[i] = read_data();
  pinMode(DHpin, OUTPUT);    //数字I/O口改变为输出 
  digitalWrite(DHpin, HIGH);            //释放总线，等待下一次操作
}




void setup() 
{
  Serial.begin(9600);
  pinMode(DHpin, OUTPUT);
  sensors.begin();                        //启动传感器
  pinMode(buzzer, OUTPUT);
}
void loop() 
{
  float temperature;
  sensors.requestTemperatures();     //发送获取温度值的命令
  temperature = sensors.getTempCByIndex(0);

  // 将光标设置在列 0, 行 1
  // 注意：在1602 LCD上行列的标号都是从0开始
 // 设置LCD有几列几行，1602LCD为16列2行
  lcd.begin(16, 2);
  //打印一段信息到LCD上
  lcd.print("Temperature:");
  lcd.print((int)temperature);
  lcd.print("C");
  lcd.print((char)223);
  lcd.setCursor(0, 2);
  lcd.setCursor(0, 1);
  lcd.print("Status:Normal");
  
  if (temperature > 30) {    //如果温度超限
  beep();
  lcd.setCursor(0, 1);
  lcd.print("Status:Normal");
  }
    delay(2000);
}

void beep() {
  for(int i=0; i<50; i++) {
    digitalWrite(buzzer,HIGH);
    delay(1);
    digitalWrite(buzzer,LOW);
    delay(1);
  }
}

